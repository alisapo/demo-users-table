{"version":3,"sources":["components/HorizontalBar.js","components/Bar.js","components/App.js","index.js"],"names":["HorizontalBar","props","state","options","chart","type","stacked","toolbar","show","plotOptions","bar","horizontal","barHeight","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","yaxis","min","max","labels","xaxis","categories","time","series","name","data","className","this","width","height","Component","Bar","Number","hour","App","onSort","sortField","sortType","sortParam","sorting","cloneData","concat","different","sortedData","_","orderBy","setState","countWorkTime","minutes","hours","toFixed","str","differentFromNorm","percentDifferent","norm","arrowRotate","param","xmlns","fillRule","clipRule","d","axios","get","then","catch","err","console","log","onClick","bind","Array","from","map","id","login","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69c6ffe6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass HorizontalBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n          toolbar: {\r\n            show: false\r\n          }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: '20%',\r\n            dataLabels: {\r\n              position: 'top',\r\n        },},},\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return val + \"%\";\r\n          },\r\n          offsetY: -20,\r\n          style: {\r\n            fontSize: '12px',\r\n            colors: [\"#304758\"]\r\n        }},\r\n        yaxis: {\r\n          min: -100,\r\n          max: 100,\r\n          labels: {\r\n            show: false,\r\n        }},\r\n        xaxis: {\r\n          categories: [this.props.time],\r\n          labels: {\r\n            show: false,\r\n      }}},\r\n      series: [{\r\n        name: \"отклонение от среднего\",\r\n        data: [this.props.time]\r\n      }]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"300\"\r\n              height=\"70\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorizontalBar;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass Bar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n          toolbar: {\r\n            show: false\r\n          }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: '20%',\r\n            dataLabels: {\r\n              position: 'top',\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return val + \"ч\";\r\n          },\r\n          offsetY: -20,\r\n          style: {\r\n            fontSize: '12px',\r\n            colors: [\"#304758\"]\r\n          }\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            show: false,\r\n          }\r\n        },\r\n        xaxis: {\r\n          categories: [this.props.time],\r\n          labels: {\r\n            show: false,\r\n          }\r\n        }\r\n      },\r\n      series: [{\r\n        name: \"отоработанное время\",\r\n        data: [Number(this.props.time)]\r\n      }]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"300\"\r\n              height=\"70\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bar;\r\n","import React, { Component } from 'react';\n\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport HorizontalBar from './HorizontalBar.js';\nimport Bar from './Bar.js';\n\nimport '../App.css';\n\nconst hour = 3600, minute = 60;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      norm: 12459,\n\n      sorting: {\n        name: 'asc',\n        time: 'asc',\n        different: 'asc'\n      },\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('https://run.mocky.io/v3/e267815a-ef5f-4583-9b73-cff9b8a59ec3')\n      .then(({ data }) => {\n        this.setState({\n          data: data.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  //сотировка по столбцам \"ФИО\", \"время активной работы\", \"отклонение от среднего\"\n  onSort = sortField => {\n    const { sorting } = this.state,\n      cloneData = this.state.data.concat();\n    let sortType, sortParam = {};\n\n    //переключение направления сортировки: asc/desc\n    switch (sortField) {\n      case 'name':\n        sortType = sorting.name === 'asc' ? 'desc' : 'asc';\n        break;\n\n      case 'time':\n        sortType = sorting.time === 'asc' ? 'desc' : 'asc';\n        break;\n\n      case 'different':\n        sortType = sorting.different === 'asc' ? 'desc' : 'asc';\n        break;\n    \n      default:\n        break;\n    };\n\n    const sortedData = _.orderBy(cloneData, sortField, sortType);\n    sortParam = {\n      ...sorting,\n      [sortField]: sortType\n    }\n    this.setState({\n      data: sortedData,\n      sorting: sortParam\n    });\n    // console.log(sortField, sortedData, sortType);\n  }\n\n  //перевод рабочего времени в вид ЧЧ ММ\n  countWorkTime = (time) => {\n    let hours = ((time - time % hour) / hour).toFixed(),\n      minutes;\n\n    if (\n      (time - time % hour) > 59\n      || (time - time % hour) < hour\n      ) {\n        minutes = ((time % hour) / minute).toFixed();\n    }\n\n    let str = hours + '.' + minutes;\n\n    return (\n      <Bar time={str} />\n    )\n  }\n\n  //подсчёт отклонения отработанного времени от среднего в процентах\n  differentFromNorm = (time) => {\n    let percentDifferent = ( (time * 100) / this.state.norm).toFixed() - 100;\n    \n    return (\n      <HorizontalBar time={percentDifferent} />\n    )\n  }\n\n  //визуальное отображение направления сортировки в столбце\n  arrowRotate = (param) => {\n    return (\n      <div>\n        {\n          param === 'desc' ?\n            <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12zm0 1c6.071 0 11 4.929 11 11s-4.929 11-11 11-11-4.929-11-11 4.929-11 11-11zm5.247 15l-5.247-6.44-5.263 6.44-.737-.678 6-7.322 6 7.335-.753.665z\" /></svg>\n            : <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12zm0 1c6.071 0 11 4.929 11 11s-4.929 11-11 11-11-4.929-11-11 4.929-11 11-11zm5.247 8l-5.247 6.44-5.263-6.44-.737.678 6 7.322 6-7.335-.753-.665z\" /></svg>\n        }\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <section>\n          <table>\n            <thead>\n              <tr>\n                <th>№</th>\n                <th className=\"sorting-fields\" onClick={this.onSort.bind(null, 'name')}>\n                  <div className=\"table-header\">ФИО</div>\n                  {this.arrowRotate(this.state.sorting.name)}\n                </th>\n                <th className=\"table-header\">Логин</th>\n                <th className=\"sorting-fields\" onClick={this.onSort.bind(null, 'time')}>\n                  <div className=\"table-header\">Время активной работы</div>\n                  {this.arrowRotate(this.state.sorting.time)}\n                </th>\n                <th className=\"sorting-fields\" onClick={this.onSort.bind(null, 'different')}>\n                  <div className=\"table-header\">Отклонение от среднего</div>\n                  {this.arrowRotate(this.state.sorting.different)}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                Array.from(this.state.data).map(str =>\n                  <tr key={str.id}>\n                    <td>{str.id + 1}</td>\n                    <td>{str.name}</td>\n                    <td>{str.login}</td>\n                    <td>{this.countWorkTime(str.time)}</td>\n                    <td>{this.differentFromNorm(str.time)}</td>\n                  </tr>\n                )}\n            </tbody>\n          </table>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}